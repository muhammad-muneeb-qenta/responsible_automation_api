version: 2.1
executors:
  docker-executor:
    docker:
      - image: circleci/node:10-browsers
      - image: circleci/mongo:3.6
        environment:
          - MONGODB_USERNAME: Admin
          - MONGODB_PASSWORD: P%40perpl%40ns786
jobs:
  build:
    executor: docker-executor
    steps:  
      - run:
          name: MongoDB Install
          command: |
            wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
            sudo apt-get update
            sudo apt-get install -y mongodb-org-shell
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Waiting for Mongo
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - checkout
      - run:
          name: Connect to DB
          command: mongosh Admin mongouser P%40perpl%40ns786 mongopass --eval "printjson(db.apikeys.count());" develop
      # - setup_remote_docker:
      #     version: 20.10.7
      - run:
          name: Build Docker image
          command: |
            docker build -t myapp:latest .
      - run:
          name: Run tests in Docker container
          command: |
            docker run --name myapp-container myapp:latest npm test -- --runInBand
            # docker run --name myapp-container myapp:latest npm test
      - store_test_results:
          path: ././tests_output
      - store_artifacts:
          path: ././tests_output
      - run:
          name: Check test results
          command: |
            if [ $? -eq 0 ]; then
              echo "Tests passed, proceeding with code upload"
            else
              echo "Tests failed, aborting build"
              exit 1
            fi
# workflows:
#   version: 2
#   thebuild:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only: develop
#       - build_stage:
#           filters:
#             branches:
#               only: master
#       - hold_deploy_prod:
#           type: approval
#           requires:
#             - build_stage
#       - build_prod:
#           requires:
#             - hold_deploy_prod
#           filters:
#             branches:
#               only: master  
